<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Kubernetes on markkerry.github.io</title><link>https://markkerry.github.io/tags/kubernetes/</link><description>Recent content in Kubernetes on markkerry.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Mar 2022 09:11:47 +0000</lastBuildDate><atom:link href="https://markkerry.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes - Pull an Image From a Private Docker Hub Registry</title><link>https://markkerry.github.io/posts/2022/03/go-container-kubernetes/</link><pubDate>Sun, 13 Mar 2022 09:11:47 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/03/go-container-kubernetes/</guid><description>A while back I created a Go container which returns the hostname of the container its running on - markkerry.github.io - Running a Local Go Web App in Docker. Running this container from a Kubernetes cluster was what I had in mind when I created it. In this post I will walk through the steps I completed to create the Kubernetes deployment with an image pulled from Docker Hub.
I will be using the same Ubuntu server lab running on VirtualBox - markkerry.</description></item><item><title>Running a Kubernetes Cluster on Ubuntu and VirtualBox</title><link>https://markkerry.github.io/posts/2022/03/ubuntu-kubernetes-virtualbox/</link><pubDate>Sun, 06 Mar 2022 09:38:52 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/03/ubuntu-kubernetes-virtualbox/</guid><description>In a previous post, I created the adminbox Ubuntu VM on VirtualBox.
server ip addr comment adminbox 10.0.2.5 Jump box from host with SSH access to all on the Nat network In this post will be using the same setup to build a Kubernetes cluster and deploy an nginx container. I have created a further 3 VMs also connected to the KubeNatNetwork.</description></item></channel></rss>