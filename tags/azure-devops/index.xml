<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Azure DevOps on markkerry.github.io</title><link>https://markkerry.github.io/tags/azure-devops/</link><description>Recent content in Azure DevOps on markkerry.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Aug 2022 09:53:20 +0100</lastBuildDate><atom:link href="https://markkerry.github.io/tags/azure-devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform in Azure DevOps Pipelines</title><link>https://markkerry.github.io/posts/2022/08/ado-terraform-build/</link><pubDate>Sun, 14 Aug 2022 09:53:20 +0100</pubDate><guid>https://markkerry.github.io/posts/2022/08/ado-terraform-build/</guid><description>The following will walkthrough deploying Azure resources using Terraform in Azure DevOps Pipelines. Although its a detailed guide, there is an expectation that the person following already has a good understanding of Git, Azure and Terraform.
It&amp;rsquo;s setup with the master or main branch created in DevOps and then cloned locally. A new branch is created and then committed to DevOps (Branch policies will restrict committing directly into master/main). A Pull Request is then created and the first pipeline is run which initialites a terraform plan and terraform validate.</description></item></channel></rss>