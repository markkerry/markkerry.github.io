<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Go on markkerry.github.io</title><link>https://markkerry.github.io/tags/go/</link><description>Recent content in Go on markkerry.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Mar 2022 10:11:47 +0000</lastBuildDate><atom:link href="https://markkerry.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes - Pull an Image From a Private Docker Hub Registry</title><link>https://markkerry.github.io/posts/2022/03/go-container-kubernetes/</link><pubDate>Sun, 13 Mar 2022 10:11:47 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/03/go-container-kubernetes/</guid><description>A while back I created a Go container which returns the hostname of the container its running on - markkerry.github.io - Running a Local Go Web App in Docker. Running this container from a Kubernetes cluster was what I had in mind when I created it. In this post I will walk through the steps I completed to create the Kubernetes deployment with an image pulled from Docker Hub.
I will be using the same Ubuntu server lab running on VirtualBox - markkerry.</description></item><item><title>Running a Local Go Web App in Docker</title><link>https://markkerry.github.io/posts/2021/03/docker-go-web-app/</link><pubDate>Sun, 14 Mar 2021 14:35:09 +0000</pubDate><guid>https://markkerry.github.io/posts/2021/03/docker-go-web-app/</guid><description>In this post, I walk through creating a simple Go web app that runs in a Docker container, and lists the hostname of the container it&amp;rsquo;s running in. I chose Go as I&amp;rsquo;ve recently gotten started writing code in Go and it&amp;rsquo;s a lot of fun to work with.
The container will install Go, so there is no need to install it locally on your machine. Docker is a prerequisite, however.</description></item></channel></rss>