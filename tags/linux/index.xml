<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Linux on markkerry.github.io</title><link>https://markkerry.github.io/tags/linux/</link><description>Recent content in Linux on markkerry.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 03 Apr 2022 10:32:05 +0000</lastBuildDate><atom:link href="https://markkerry.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Ansible Part 1: Setup and Configure on Ubuntu and VirtualBox</title><link>https://markkerry.github.io/posts/2022/04/ansible-part-1/</link><pubDate>Sun, 03 Apr 2022 10:32:05 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/04/ansible-part-1/</guid><description>This is part one in a three part Ansible series, which will demonstrate how you can get started learning Ansible. The complete list of posts in this series are:
Ansible Part 1: Setup and Configure on Ubuntu and VirtualBox (This post) Ansible Part 2: Playbooks Ansible Part 3: Variables, Vault and Roles All code in these posts can be found on GitHub - ubuntu-config/ansible
Getting Started I used the adminbox VM connected to the KubeNatNetwork (10.</description></item><item><title>Ansible Part 2: Playbooks</title><link>https://markkerry.github.io/posts/2022/04/ansible-part-2/</link><pubDate>Sun, 03 Apr 2022 10:31:05 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/04/ansible-part-2/</guid><description>In this post I&amp;rsquo;ll be going over Ansible Playbooks. The complete list of posts in this series are:
Ansible Part 1: Setup and Configure on Ubuntu and VirtualBox Ansible Part 2: Playbooks (This post) Ansible Part 3: Variables, Vault and Roles All code in these posts can be found on GitHub - ubuntu-config/ansible
Playbooks Playbooks allow us to write ordered process and manage configurations in the form of yaml syntax. These can then be used to build out remote systems.</description></item><item><title>Ansible Part 3: Variables, Vault and Roles</title><link>https://markkerry.github.io/posts/2022/04/ansible-part-3/</link><pubDate>Sun, 03 Apr 2022 10:30:05 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/04/ansible-part-3/</guid><description>In this post I&amp;rsquo;ll demonstrate using variables in your Ansible Playbooks, then go on to secret management using Ansible Vault, before finally completing the post covering Ansible Roles. The complete list of posts in this series are:
Ansible Part 1: Setup and Configure on Ubuntu and VirtualBox Ansible Part 2: Playbooks Ansible Part 3: Variables, Vault and Roles (This post) All code in these posts can be found on GitHub - ubuntu-config/ansible and GitHub - ubuntu-config/ansible-roles</description></item><item><title>Kubernetes - Pull an Image From a Private Docker Hub Registry</title><link>https://markkerry.github.io/posts/2022/03/go-container-kubernetes/</link><pubDate>Sun, 13 Mar 2022 09:11:47 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/03/go-container-kubernetes/</guid><description>A while back I created a Go container which returns the hostname of the container its running on - markkerry.github.io - Running a Local Go Web App in Docker. Running this container from a Kubernetes cluster was what I had in mind when I created it. In this post I will walk through the steps I completed to create the Kubernetes deployment with an image pulled from Docker Hub.
I will be using the same Ubuntu server lab running on VirtualBox - markkerry.</description></item><item><title>Running a Kubernetes Cluster on Ubuntu and VirtualBox</title><link>https://markkerry.github.io/posts/2022/03/ubuntu-kubernetes-virtualbox/</link><pubDate>Sun, 06 Mar 2022 09:38:52 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/03/ubuntu-kubernetes-virtualbox/</guid><description>In a previous post, I created the adminbox Ubuntu VM on VirtualBox.
server ip addr comment adminbox 10.0.2.5 Jump box from host with SSH access to all on the Nat network In this post will be using the same setup to build a Kubernetes cluster and deploy an nginx container. I have created a further 3 VMs also connected to the KubeNatNetwork. Note: these only have one network adapter.
network address: 10.</description></item><item><title>Ubuntu Server 20.04 LTS VirtualBox Lab</title><link>https://markkerry.github.io/posts/2022/02/ubuntu-server-lab/</link><pubDate>Sun, 13 Feb 2022 09:10:46 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/02/ubuntu-server-lab/</guid><description>This is a follow on from my old Centos 8 post, but this time I will be using Ubuntu LTS servers running on a Linux host with VirtualBox. The lab environment is designed to be used for any of the following:
General Linux sysadmin Kubernetes cluster Ansible configuration management Terraform VirtualBox Provider This post will cover of the following:
Installing &amp;amp; configuring VirtualBox Installing &amp;amp; configuring the adminbox server The adminbox server will have a bridged adapter to the host and will be used to SSH onto the other VMs via the VirtualBox NAT network.</description></item><item><title>Installing &amp; Configuring CentOS 8 Minimal Install</title><link>https://markkerry.github.io/posts/2021/05/centos8-setup/</link><pubDate>Sun, 09 May 2021 12:19:49 +0000</pubDate><guid>https://markkerry.github.io/posts/2021/05/centos8-setup/</guid><description>I wanted to start learning the basics of Kubernetes and thought the best way to get started was by creating a virtualised lab and starting from scratch. But I will not cover k8s in this post. Instead I will detail the initial setup of the CentOS 8 minimal install VM for a lab environment which can be used for k8s or Ansible.
I used Hyper-V on Windows 10, connected to a &amp;ldquo;Default switch&amp;rdquo; (internal), and running 3x CentOS 8 VMs.</description></item></channel></rss>