<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Terraform on markkerry.github.io</title><link>https://markkerry.github.io/tags/terraform/</link><description>Recent content in Terraform on markkerry.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Aug 2022 09:53:20 +0100</lastBuildDate><atom:link href="https://markkerry.github.io/tags/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform in Azure DevOps Pipelines</title><link>https://markkerry.github.io/posts/2022/08/ado-terraform-build/</link><pubDate>Sun, 14 Aug 2022 09:53:20 +0100</pubDate><guid>https://markkerry.github.io/posts/2022/08/ado-terraform-build/</guid><description>The following will walkthrough deploying Azure resources using Terraform in Azure DevOps Pipelines. Although its a detailed guide, there is an expectation that the person following already has a good understanding of Git, Azure and Terraform.
It&amp;rsquo;s setup with the master or main branch created in DevOps and then cloned locally. A new branch is created and then committed to DevOps (Branch policies will restrict committing directly into master/main). A Pull Request is then created and the first pipeline is run which initialites a terraform plan and terraform validate.</description></item><item><title>Terraform Azure Provider</title><link>https://markkerry.github.io/posts/2022/06/terraform-azure-provider/</link><pubDate>Sun, 05 Jun 2022 10:01:49 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/06/terraform-azure-provider/</guid><description>In the following post I will demonstrate getting started with the Terraform Azure Provider. I&amp;rsquo;ll build the configuration for:
Resource Group Virtual Network Subnet Network Security Group (Allow SSH) NSG Association 2 x Linux Virtual Machines 2 x Network Interface Cards 2 x Public IPs These will all be deployed them from Azure Cloud Shell.
Remote vs Local State A quick note on the Terraform state file&amp;hellip; I have decided to create a remote state file, stored in an Azure Storage Account in order to demonstrate the &amp;ldquo;backend&amp;rdquo; configuration.</description></item><item><title>Terraform VirtualBox Provider</title><link>https://markkerry.github.io/posts/2022/05/terraform-virtualbox-provider/</link><pubDate>Sun, 01 May 2022 10:02:49 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/05/terraform-virtualbox-provider/</guid><description>In this post I will demonstrate how to deploy 2x Ubuntu Virtual Machines using the Terraform VirtualBox provider, terra-farm
You can install VirtualBox on Ubuntu using this guide. The main.tf file is configured to use a network adapter called vnetbox1, so you need to ensure it is created and set DHCP Server to Enable.
Install Terraform Let&amp;rsquo;s start by installing Terraform. The following is from the official Terraform documentation:
Add the Terraform gpg key.</description></item></channel></rss>