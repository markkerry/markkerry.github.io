<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>C Programming on markkerry.github.io</title><link>https://markkerry.github.io/tags/c-programming/</link><description>Recent content in C Programming on markkerry.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 30 Jan 2022 12:27:31 +0000</lastBuildDate><atom:link href="https://markkerry.github.io/tags/c-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to C Programming</title><link>https://markkerry.github.io/posts/2022/01/learning-c/</link><pubDate>Sun, 30 Jan 2022 12:27:31 +0000</pubDate><guid>https://markkerry.github.io/posts/2022/01/learning-c/</guid><description>Introduction I&amp;rsquo;ve been coding in PowerShell for many years and wanted to step back and learn the basics of a language which many future languages were based; C++, C#, PowerShell, Go, etc. The biggest hurdle I found when learning C, was the change from an object-orientated language, such as PowerShell, to a functional language in C.
Wikipedia&amp;rsquo;s description of C:
&amp;ldquo;C is a general-purpose, procedural computer programming language supporting structured programming, lexical variable scope, and recursion, with a static type system.</description></item></channel></rss>